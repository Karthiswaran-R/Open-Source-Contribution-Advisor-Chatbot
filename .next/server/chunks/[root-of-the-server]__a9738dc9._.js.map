{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":["file:///home/Karthi/open-source-chatbot/utils/langchain_tools.js"],"sourcesContent":["// tools/langchain_tools.js\n\nimport { z } from \"zod\";\nimport { DynamicStructuredTool } from \"langchain/tools\";\nimport dotenv from \"dotenv\";\nimport fetch from \"node-fetch\";\n\ndotenv.config();\n\nconst GITHUB_TOKEN = process.env.GITHUB_TOKEN;\n\nconst headers = {\n  Accept: \"application/vnd.github+json\",\n  ...(GITHUB_TOKEN && { Authorization: `Bearer ${GITHUB_TOKEN}` }),\n};\n\nexport const fetch_top_repositories = new DynamicStructuredTool({\n  name: \"fetch_top_repositories\",\n  description: \"Fetches top 5 repositories for a given GitHub topic.\",\n  schema: z.object({\n    topic: z.string().describe(\"The GitHub topic (e.g., 'react', 'ai')\"),\n  }),\n  func: async ({ topic }) => {\n    const response = await fetch(\n      `https://api.github.com/search/repositories?q=topic:${topic}&sort=stars&order=desc&per_page=5`,\n      { headers }\n    );\n    const data = await response.json();\n\n    if (!data.items) return `No repositories found for topic \"${topic}\".`;\n\n    return data.items\n      .map((repo, i) => `${i + 1}. ${repo.full_name} - ‚≠ê ${repo.stargazers_count}`)\n      .join(\"\\n\");\n  },\n});\n\nexport const fetch_good_first_issues = new DynamicStructuredTool({\n  name: \"fetch_good_first_issues\",\n  description: \"Fetches good first issues from a GitHub repository.\",\n  schema: z.object({\n    repo: z.string().describe(\"Repository in 'owner/repo' format\"),\n  }),\n  func: async ({ repo }) => {\n    const response = await fetch(\n      `https://api.github.com/repos/${repo}/issues?labels=good%20first%20issue&state=open&per_page=5`,\n      { headers }\n    );\n    const data = await response.json();\n\n    if (!Array.isArray(data)) return `No good first issues found for \"${repo}\".`;\n\n    return data\n      .map((issue, i) => `${i + 1}. ${issue.title} - ${issue.html_url}`)\n      .join(\"\\n\");\n  },\n});\n\nexport const compare_guidelines = new DynamicStructuredTool({\n  name: \"compare_guidelines\",\n  description: \"Compares contribution guidelines of two repositories.\",\n  schema: z.object({\n    repo1: z.string().describe(\"First GitHub repo (owner/repo)\"),\n    repo2: z.string().describe(\"Second GitHub repo (owner/repo)\"),\n  }),\n  func: async ({ repo1, repo2 }) => {\n    const fetchGuidelines = async (repo) => {\n      const response = await fetch(\n        `https://raw.githubusercontent.com/${repo}/main/CONTRIBUTING.md`\n      );\n      return response.ok ? await response.text() : `No CONTRIBUTING.md found in ${repo}`;\n    };\n\n    const [guideline1, guideline2] = await Promise.all([\n      fetchGuidelines(repo1),\n      fetchGuidelines(repo2),\n    ]);\n\n    return `üîπ Guidelines for ${repo1}:\\n${guideline1.slice(0, 500)}...\\n\\n` +\n           `üî∏ Guidelines for ${repo2}:\\n${guideline2.slice(0, 500)}...`;\n  },\n});\n\n"],"names":[],"mappings":"AAAA,2BAA2B;;;;;;AAE3B;AACA;AACA;AACA;;;;;;;;;;AAEA,qGAAA,CAAA,UAAM,CAAC,MAAM;AAEb,MAAM,eAAe,QAAQ,GAAG,CAAC,YAAY;AAE7C,MAAM,UAAU;IACd,QAAQ;IACR,GAAI,gBAAgB;QAAE,eAAe,CAAC,OAAO,EAAE,cAAc;IAAC,CAAC;AACjE;AAEO,MAAM,yBAAyB,IAAI,oIAAA,CAAA,wBAAqB,CAAC;IAC9D,MAAM;IACN,aAAa;IACb,QAAQ,sGAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QACf,OAAO,sGAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC7B;IACA,MAAM,OAAO,EAAE,KAAK,EAAE;QACpB,MAAM,WAAW,MAAM,CAAA,GAAA,mHAAA,CAAA,UAAK,AAAD,EACzB,CAAC,mDAAmD,EAAE,MAAM,iCAAiC,CAAC,EAC9F;YAAE;QAAQ;QAEZ,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,IAAI,CAAC,KAAK,KAAK,EAAE,OAAO,CAAC,iCAAiC,EAAE,MAAM,EAAE,CAAC;QAErE,OAAO,KAAK,KAAK,CACd,GAAG,CAAC,CAAC,MAAM,IAAM,GAAG,IAAI,EAAE,EAAE,EAAE,KAAK,SAAS,CAAC,KAAK,EAAE,KAAK,gBAAgB,EAAE,EAC3E,IAAI,CAAC;IACV;AACF;AAEO,MAAM,0BAA0B,IAAI,oIAAA,CAAA,wBAAqB,CAAC;IAC/D,MAAM;IACN,aAAa;IACb,QAAQ,sGAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QACf,MAAM,sGAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC5B;IACA,MAAM,OAAO,EAAE,IAAI,EAAE;QACnB,MAAM,WAAW,MAAM,CAAA,GAAA,mHAAA,CAAA,UAAK,AAAD,EACzB,CAAC,6BAA6B,EAAE,KAAK,yDAAyD,CAAC,EAC/F;YAAE;QAAQ;QAEZ,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,IAAI,CAAC,MAAM,OAAO,CAAC,OAAO,OAAO,CAAC,gCAAgC,EAAE,KAAK,EAAE,CAAC;QAE5E,OAAO,KACJ,GAAG,CAAC,CAAC,OAAO,IAAM,GAAG,IAAI,EAAE,EAAE,EAAE,MAAM,KAAK,CAAC,GAAG,EAAE,MAAM,QAAQ,EAAE,EAChE,IAAI,CAAC;IACV;AACF;AAEO,MAAM,qBAAqB,IAAI,oIAAA,CAAA,wBAAqB,CAAC;IAC1D,MAAM;IACN,aAAa;IACb,QAAQ,sGAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QACf,OAAO,sGAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;QAC3B,OAAO,sGAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC7B;IACA,MAAM,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE;QAC3B,MAAM,kBAAkB,OAAO;YAC7B,MAAM,WAAW,MAAM,CAAA,GAAA,mHAAA,CAAA,UAAK,AAAD,EACzB,CAAC,kCAAkC,EAAE,KAAK,qBAAqB,CAAC;YAElE,OAAO,SAAS,EAAE,GAAG,MAAM,SAAS,IAAI,KAAK,CAAC,4BAA4B,EAAE,MAAM;QACpF;QAEA,MAAM,CAAC,YAAY,WAAW,GAAG,MAAM,QAAQ,GAAG,CAAC;YACjD,gBAAgB;YAChB,gBAAgB;SACjB;QAED,OAAO,CAAC,kBAAkB,EAAE,MAAM,GAAG,EAAE,WAAW,KAAK,CAAC,GAAG,KAAK,OAAO,CAAC,GACjE,CAAC,kBAAkB,EAAE,MAAM,GAAG,EAAE,WAAW,KAAK,CAAC,GAAG,KAAK,GAAG,CAAC;IACtE;AACF","debugId":null}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":["file:///home/Karthi/open-source-chatbot/pages/api/chat.js"],"sourcesContent":["// pages/api/chat.js\n\nimport { ChatOpenAI } from '@langchain/openai';\nimport { initializeAgentExecutorWithOptions } from 'langchain/agents';\nimport {\n  fetch_top_repositories,\n  fetch_good_first_issues,\n  compare_guidelines,\n} from '../../utils/langchain_tools';\nimport dotenv from 'dotenv';\n\ndotenv.config();\n\nconst groq_api_key = process.env.GROQ_API_KEY;\n\nif (!groq_api_key) {\n  throw new Error('GROQ_API_KEY is missing. Set it in .env');\n}\n\nconst tools = [fetch_top_repositories, fetch_good_first_issues, compare_guidelines];\nlet agentPromise = null;\n\nconst skillMap = {\n  js: 'JavaScript',\n  javascript: 'JavaScript',\n  py: 'Python',\n  python: 'Python',\n  cpp: 'C++',\n  cplusplus: 'C++',\n  c: 'C',\n  csharp: 'C#',\n  ts: 'TypeScript',\n  typescript: 'TypeScript',\n  go: 'Go',\n  rust: 'Rust',\n  java: 'Java',\n  html: 'HTML',\n  verilog: 'Verilog',\n  hdl: 'HDL',\n  dart: 'Dart',\n  zig: 'Zig',\n  elixir: 'Elixir',\n};\n\nfunction extractSkills(message) {\n  const matches = message.match(/\\b[A-Za-z\\+\\#]+\\b/g);\n  if (!matches) return ['general'];\n  const filtered = matches.filter((word) => word.length > 1 && /^[A-Za-z\\+\\#]+$/.test(word));\n  const normalized = filtered.map(skill => {\n    const key = skill.toLowerCase();\n    return skillMap[key] || skill;\n  });\n  return [...new Set(normalized)];\n}\n\nfunction getAgent() {\n  if (!agentPromise) {\n    const llm = new ChatOpenAI({\n      temperature: 0,\n      modelName: 'llama3-70b-8192',\n      openAIApiKey: groq_api_key,\n      streaming: true,\n      callbacks: [],\n      configuration: {\n        baseURL: 'https://api.groq.com/openai/v1',\n      },\n    });\n\n    agentPromise = initializeAgentExecutorWithOptions(tools, llm, {\n      agentType: 'structured-chat-zero-shot-react-description',\n      verbose: true,\n    });\n  }\n\n  return agentPromise;\n}\n\nexport default async function handler(req, res) {\n  if (req.method !== 'POST') {\n    return res.status(405).json({ error: 'Only POST requests allowed' });\n  }\n\n  const { message } = req.body;\n\n  if (!message || typeof message !== 'string' || message.trim() === '') {\n    return res.status(400).json({ error: 'Input query is required.' });\n  }\n\n  try {\n    console.log('üîç Input:', message);\n    const skills = extractSkills(message);\n    console.log('üß† Extracted Skills:', skills);\n\n    const agent = await getAgent();\n    let fullResponse = '';\n\n    const result = await agent.invoke({ input: message, skills });\n\n    console.log('‚úÖ Agent result:', result);\n\n    res.setHeader('Content-Type', 'application/json');\n    res.status(200).json({ reply: result.output || 'No response generated.' });\n  } catch (error) {\n    console.error('‚ùå Agent error:', error.message);\n    res.status(500).json({ error: 'Agent failed to respond.', details: error.message });\n  }\n}\n\n"],"names":[],"mappings":"AAAA,oBAAoB;;;;AAEpB;AACA;AACA;AAKA;;;;;;;;;;;AAEA,qGAAA,CAAA,UAAM,CAAC,MAAM;AAEb,MAAM,eAAe,QAAQ,GAAG,CAAC,YAAY;AAE7C,IAAI,CAAC,cAAc;IACjB,MAAM,IAAI,MAAM;AAClB;AAEA,MAAM,QAAQ;IAAC,iHAAA,CAAA,yBAAsB;IAAE,iHAAA,CAAA,0BAAuB;IAAE,iHAAA,CAAA,qBAAkB;CAAC;AACnF,IAAI,eAAe;AAEnB,MAAM,WAAW;IACf,IAAI;IACJ,YAAY;IACZ,IAAI;IACJ,QAAQ;IACR,KAAK;IACL,WAAW;IACX,GAAG;IACH,QAAQ;IACR,IAAI;IACJ,YAAY;IACZ,IAAI;IACJ,MAAM;IACN,MAAM;IACN,MAAM;IACN,SAAS;IACT,KAAK;IACL,MAAM;IACN,KAAK;IACL,QAAQ;AACV;AAEA,SAAS,cAAc,OAAO;IAC5B,MAAM,UAAU,QAAQ,KAAK,CAAC;IAC9B,IAAI,CAAC,SAAS,OAAO;QAAC;KAAU;IAChC,MAAM,WAAW,QAAQ,MAAM,CAAC,CAAC,OAAS,KAAK,MAAM,GAAG,KAAK,kBAAkB,IAAI,CAAC;IACpF,MAAM,aAAa,SAAS,GAAG,CAAC,CAAA;QAC9B,MAAM,MAAM,MAAM,WAAW;QAC7B,OAAO,QAAQ,CAAC,IAAI,IAAI;IAC1B;IACA,OAAO;WAAI,IAAI,IAAI;KAAY;AACjC;AAEA,SAAS;IACP,IAAI,CAAC,cAAc;QACjB,MAAM,MAAM,IAAI,0IAAA,CAAA,aAAU,CAAC;YACzB,aAAa;YACb,WAAW;YACX,cAAc;YACd,WAAW;YACX,WAAW,EAAE;YACb,eAAe;gBACb,SAAS;YACX;QACF;QAEA,eAAe,CAAA,GAAA,sIAAA,CAAA,qCAAkC,AAAD,EAAE,OAAO,KAAK;YAC5D,WAAW;YACX,SAAS;QACX;IACF;IAEA,OAAO;AACT;AAEe,eAAe,QAAQ,GAAG,EAAE,GAAG;IAC5C,IAAI,IAAI,MAAM,KAAK,QAAQ;QACzB,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO;QAA6B;IACpE;IAEA,MAAM,EAAE,OAAO,EAAE,GAAG,IAAI,IAAI;IAE5B,IAAI,CAAC,WAAW,OAAO,YAAY,YAAY,QAAQ,IAAI,OAAO,IAAI;QACpE,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO;QAA2B;IAClE;IAEA,IAAI;QACF,QAAQ,GAAG,CAAC,aAAa;QACzB,MAAM,SAAS,cAAc;QAC7B,QAAQ,GAAG,CAAC,wBAAwB;QAEpC,MAAM,QAAQ,MAAM;QACpB,IAAI,eAAe;QAEnB,MAAM,SAAS,MAAM,MAAM,MAAM,CAAC;YAAE,OAAO;YAAS;QAAO;QAE3D,QAAQ,GAAG,CAAC,mBAAmB;QAE/B,IAAI,SAAS,CAAC,gBAAgB;QAC9B,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO,OAAO,MAAM,IAAI;QAAyB;IAC1E,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,kBAAkB,MAAM,OAAO;QAC7C,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO;YAA4B,SAAS,MAAM,OAAO;QAAC;IACnF;AACF","debugId":null}},
    {"offset": {"line": 278, "column": 0}, "map": {"version":3,"sources":["file:///home/Karthi/open-source-chatbot/node_modules/next/dist/src/server/route-modules/pages-api/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/pages-api/module.js')\n} else {\n  if (process.env.NODE_ENV === 'development') {\n    if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.dev.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/pages-api.runtime.dev.js')\n    }\n  } else {\n    if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/pages-api.runtime.prod.js')\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,QAAQ,KAAK,WAAe;QAC1C,IAAIN,QAAQC,GAAG,CAACM,SAAS,eAAE;YACzBJ,OAAOC,OAAO,GAAGC,QAAQ;QAC3B,OAAO;;QAEP;IACF,OAAO;;IAMP;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 297, "column": 0}, "map": {"version":3,"sources":["file:///home/Karthi/open-source-chatbot/node_modules/next/dist/src/server/route-kind.ts"],"sourcesContent":["export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n"],"names":["RouteKind"],"mappings":";;;AAAO,IAAWA,YAAAA,WAAAA,GAAAA,SAAAA,SAAAA;IAChB;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;IAED;;GAEC,GAAA,SAAA,CAAA,YAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,WAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,YAAA,GAAA;IAGD;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;WAtBeA;MAwBjB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 326, "column": 0}, "map": {"version":3,"sources":["file:///home/Karthi/open-source-chatbot/node_modules/next/dist/src/build/templates/helpers.ts"],"sourcesContent":["/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */\nexport function hoist(module: any, name: string) {\n  // If the name is available in the module, return it.\n  if (name in module) {\n    return module[name]\n  }\n\n  // If a property called `then` exists, assume it's a promise and\n  // return a promise that resolves to the name.\n  if ('then' in module && typeof module.then === 'function') {\n    return module.then((mod: any) => hoist(mod, name))\n  }\n\n  // If we're trying to hoise the default export, and the module is a function,\n  // return the module itself.\n  if (typeof module === 'function' && name === 'default') {\n    return module\n  }\n\n  // Otherwise, return undefined.\n  return undefined\n}\n"],"names":["hoist","module","name","then","mod","undefined"],"mappings":"AAAA;;;;;;CAMC,GACD;;;AAAO,SAASA,MAAMC,MAAW,EAAEC,IAAY;IAC7C,qDAAqD;IACrD,IAAIA,QAAQD,QAAQ;QAClB,OAAOA,MAAM,CAACC,KAAK;IACrB;IAEA,gEAAgE;IAChE,8CAA8C;IAC9C,IAAI,UAAUD,UAAU,OAAOA,OAAOE,IAAI,KAAK,YAAY;QACzD,OAAOF,OAAOE,IAAI,CAAC,CAACC,MAAaJ,MAAMI,KAAKF;IAC9C;IAEA,6EAA6E;IAC7E,4BAA4B;IAC5B,IAAI,OAAOD,WAAW,cAAcC,SAAS,WAAW;QACtD,OAAOD;IACT;IAEA,+BAA+B;IAC/B,OAAOI;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 359, "column": 0}, "map": {"version":3,"sources":["file:///home/Karthi/open-source-chatbot/node_modules/next/dist/src/build/templates/pages-api.ts"],"sourcesContent":["import { PagesAPIRouteModule } from '../../server/route-modules/pages-api/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\n\nimport { hoist } from './helpers'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\n\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export config.\nexport const config = hoist(userland, 'config')\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesAPIRouteModule({\n  definition: {\n    kind: RouteKind.PAGES_API,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  userland,\n})\n"],"names":["PagesAPIRouteModule","RouteKind","hoist","userland","config","routeModule","definition","kind","PAGES_API","page","pathname","bundlePath","filename"],"mappings":";;;;;AAAA,SAASA,mBAAmB,QAAQ,uDAAsD;AAC1F,SAASC,SAAS,QAAQ,0BAAyB;AAEnD,SAASC,KAAK,QAAQ,YAAW;AAEjC,4BAA4B;AAC5B,YAAYC,cAAc,eAAc;;;;;;;;;yMAGzBD,QAAAA,EAAMC,+GAAU,WAAU;AAGlC,MAAMC,2KAASF,QAAAA,EAAMC,+GAAU,UAAS;AAGxC,MAAME,cAAc,qMAAIL,sBAAAA,CAAoB;IACjDM,YAAY;QACVC,8JAAMN,YAAAA,CAAUO,SAAS;QACzBC,MAAM;QACNC,UAAU;QACV,2CAA2C;QAC3CC,YAAY;QACZC,UAAU;IACZ;cACAT;AACF,GAAE","ignoreList":[0],"debugId":null}}]
}